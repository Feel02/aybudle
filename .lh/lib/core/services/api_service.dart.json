{
    "sourceFile": "lib/core/services/api_service.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 44,
            "patches": [
                {
                    "date": 1742123178345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742137397817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,27 @@\n     } catch (e) {\r\n       return false;\r\n     }\r\n   }\r\n-}\n\\ No newline at end of file\n+\r\n+  Future<bool> login(String baseUrl, String username, String password) async {\r\n+    try {\r\n+      // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n+      final response = await _dio.post(\r\n+        \"$baseUrl/login/token.php\",\r\n+        data: {\r\n+          \"username\": username,\r\n+          \"password\": password,\r\n+          \"service\": \"moodle_mobile_app\",\r\n+        },\r\n+      );\r\n+\r\n+      // Check if login was successful (i.e., token exists)\r\n+      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        return true;\r\n+      }\r\n+      return false;\r\n+    } catch (e) {\r\n+      return false;\r\n+    }\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1742137771598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n       // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n       final response = await _dio.post(\r\n-        \"$baseUrl/login/token.php\",\r\n+        \"$baseUrl/login/index.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n           \"service\": \"moodle_mobile_app\",\r\n"
                },
                {
                    "date": 1742138806053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n       // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n       final response = await _dio.post(\r\n-        \"$baseUrl/login/index.php\",\r\n+        \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n           \"service\": \"moodle_mobile_app\",\r\n"
                },
                {
                    "date": 1742138869579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n-          \"service\": \"moodle_mobile_app\",\r\n+          \"service\": 'moodle_mobile_app',\r\n         },\r\n       );\r\n \r\n       // Check if login was successful (i.e., token exists)\r\n"
                },
                {
                    "date": 1742142125625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n-          \"service\": 'moodle_mobile_app',\r\n+          \"service\": \"moodle_mobile_app\",\r\n         },\r\n       );\r\n \r\n       // Check if login was successful (i.e., token exists)\r\n"
                },
                {
                    "date": 1742152457828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,19 +13,16 @@\n   }\r\n \r\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n-      // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n-      final response = await _dio.post(\r\n+      final response = await _dio.get(\r\n         \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n           \"service\": \"moodle_mobile_app\",\r\n         },\r\n       );\r\n-\r\n-      // Check if login was successful (i.e., token exists)\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         return true;\r\n       }\r\n       return false;\r\n"
                },
                {
                    "date": 1742152467704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n-          \"service\": \"moodle_mobile_app\",\r\n+          \"service\": 'moodle_mobile_app',\r\n         },\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         return true;\r\n"
                },
                {
                    "date": 1742152491403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n           \"service\": 'moodle_mobile_app',\r\n         },\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        print(\"JPZSDFVJIOFVSJVDFJKLBDJJKJLBDFKDFBJLLJKBDFJKDFLB\");\r\n         return true;\r\n       }\r\n       return false;\r\n     } catch (e) {\r\n"
                },
                {
                    "date": 1742152596439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,14 +14,9 @@\n \r\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n       final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php\",\r\n-        data: {\r\n-          \"username\": username,\r\n-          \"password\": password,\r\n-          \"service\": 'moodle_mobile_app',\r\n-        },\r\n+        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(\"JPZSDFVJIOFVSJVDFJKLBDJJKJLBDFKDFBJLLJKBDFJKDFLB\");\r\n         return true;\r\n"
                },
                {
                    "date": 1742152784116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   }\r\n \r\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n+      print(\"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\");\r\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n"
                },
                {
                    "date": 1742153014237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n       print(\"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\");\r\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n+      print(response.data);\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(\"JPZSDFVJIOFVSJVDFJKLBDJJKJLBDFKDFBJLLJKBDFJKDFLB\");\r\n         return true;\r\n       }\r\n"
                },
                {
                    "date": 1742154032232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       print(response.data);\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n-        print(\"JPZSDFVJIOFVSJVDFJKLBDJJKJLBDFKDFBJLLJKBDFJKDFLB\");\r\n         return true;\r\n       }\r\n       return false;\r\n     } catch (e) {\r\n"
                },
                {
                    "date": 1742154045744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,11 @@\n   }\r\n \r\n   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n-      print(\"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\");\r\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n-      print(response.data);\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         return true;\r\n       }\r\n       return false;\r\n"
                },
                {
                    "date": 1742154094794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,21 @@\n       return false;\r\n     }\r\n   }\r\n \r\n-  Future<bool> login(String baseUrl, String username, String password) async {\r\n+   Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n+      // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n+      final response = await _dio.post(\r\n+        \"$baseUrl/login/token.php\",\r\n+        data: {\r\n+          \"username\": username,\r\n+          \"password\": password,\r\n+          \"service\": \"moodle_mobile_app\",\r\n+        },\r\n       );\r\n+\r\n+      // Check if login was successful (i.e., token exists)\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         return true;\r\n       }\r\n       return false;\r\n"
                },
                {
                    "date": 1742154164765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         \"$baseUrl/login/token.php\",\r\n         data: {\r\n           \"username\": username,\r\n           \"password\": password,\r\n-          \"service\": \"moodle_mobile_app\",\r\n+          \"service\": 'moodle_mobile_app',\r\n         },\r\n       );\r\n \r\n       // Check if login was successful (i.e., token exists)\r\n"
                },
                {
                    "date": 1742154229314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,21 +11,13 @@\n       return false;\r\n     }\r\n   }\r\n \r\n-   Future<bool> login(String baseUrl, String username, String password) async {\r\n+  Future<bool> login(String baseUrl, String username, String password) async {\r\n     try {\r\n-      // Assuming the Moodle login endpoint is at \"<baseUrl>/login/token.php\"\r\n-      final response = await _dio.post(\r\n-        \"$baseUrl/login/token.php\",\r\n-        data: {\r\n-          \"username\": username,\r\n-          \"password\": password,\r\n-          \"service\": 'moodle_mobile_app',\r\n-        },\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n-\r\n-      // Check if login was successful (i.e., token exists)\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         return true;\r\n       }\r\n       return false;\r\n"
                },
                {
                    "date": 1742154535828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        print(response.data);\r\n         return true;\r\n       }\r\n       return false;\r\n     } catch (e) {\r\n"
                },
                {
                    "date": 1742160120599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'dart:ffi';\r\n+\r\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n@@ -11,19 +13,19 @@\n       return false;\r\n     }\r\n   }\r\n \r\n-  Future<bool> login(String baseUrl, String username, String password) async {\r\n+  Future<List> login(String baseUrl, String username, String password) async {\r\n     try {\r\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(response.data);\r\n-        return true;\r\n+        return [true, response.data[\"token\"]];\r\n       }\r\n-      return false;\r\n+      return [false,null];\r\n     } catch (e) {\r\n-      return false;\r\n+      return [false,null];\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1742160895026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(response.data);\r\n-        return [true, response.data[\"token\"]];\r\n+        return [true, response.data[\"private_token\"]];\r\n       }\r\n       return [false,null];\r\n     } catch (e) {\r\n       return [false,null];\r\n"
                },
                {
                    "date": 1742160903747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(response.data);\r\n-        return [true, response.data[\"private_token\"]];\r\n+        return [true, response.data[\"privatetoken\"]];\r\n       }\r\n       return [false,null];\r\n     } catch (e) {\r\n       return [false,null];\r\n"
                },
                {
                    "date": 1742160952209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n         print(response.data);\r\n-        return [true, response.data[\"privatetoken\"]];\r\n+        return [true, response.data[\"token\"]];\r\n       }\r\n       return [false,null];\r\n     } catch (e) {\r\n       return [false,null];\r\n"
                },
                {
                    "date": 1742921146217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,5 +27,40 @@\n     } catch (e) {\r\n       return [false,null];\r\n     }\r\n   }\r\n+\r\n+  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_webservice_get_site_info',\r\n+          'moodlewsrestformat': 'json',\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get user info: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_message_get_messages',\r\n+          'moodlewsrestformat': 'json',\r\n+          'useridto': userId,\r\n+          'type': 'notifications',\r\n+        },\r\n+      );\r\n+      return response.data['messages'] ?? [];\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get notifications: $e');\r\n+    }\r\n+  }\r\n }\r\n+\r\n"
                },
                {
                    "date": 1742922036578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,19 @@\n   }\r\n \r\n   Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n     try {\r\n+      print('\\n=== API Call Parameters ===');\r\n+      print('URL: $baseUrl/webservice/rest/server.php');\r\n+      print('Parameters:');\r\n+      print({\r\n+        'wstoken': 'REDACTED', // Don't print actual token\r\n+        'wsfunction': 'core_message_get_messages',\r\n+        'moodlewsrestformat': 'json',\r\n+        'useridto': userId,\r\n+        'type': 'notifications',\r\n+      });\r\n+\r\n       final response = await _dio.get(\r\n         \"$baseUrl/webservice/rest/server.php\",\r\n         queryParameters: {\r\n           'wstoken': token,\r\n@@ -56,11 +67,20 @@\n           'useridto': userId,\r\n           'type': 'notifications',\r\n         },\r\n       );\r\n+\r\n+      print('\\n=== Raw API Response ===');\r\n+      print('Status Code: ${response.statusCode}');\r\n+      print('Headers: ${response.headers}');\r\n+      print('Response Data:');\r\n+      print(response.data);\r\n+\r\n       return response.data['messages'] ?? [];\r\n     } catch (e) {\r\n-      throw Exception('Failed to get notifications: $e');\r\n+      print('\\n=== Error in getNotifications ===');\r\n+      print('Error details: $e');\r\n+      rethrow;\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1742922230068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,41 +46,25 @@\n   }\r\n \r\n   Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n     try {\r\n-      print('\\n=== API Call Parameters ===');\r\n-      print('URL: $baseUrl/webservice/rest/server.php');\r\n-      print('Parameters:');\r\n-      print({\r\n-        'wstoken': 'REDACTED', // Don't print actual token\r\n-        'wsfunction': 'core_message_get_messages',\r\n-        'moodlewsrestformat': 'json',\r\n-        'useridto': userId,\r\n-        'type': 'notifications',\r\n-      });\r\n-\r\n+      // Try alternative API endpoints\r\n       final response = await _dio.get(\r\n         \"$baseUrl/webservice/rest/server.php\",\r\n         queryParameters: {\r\n           'wstoken': token,\r\n-          'wsfunction': 'core_message_get_messages',\r\n+          'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n+          // 'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n           'moodlewsrestformat': 'json',\r\n           'useridto': userId,\r\n-          'type': 'notifications',\r\n+          'limitnum': 20,  // Add pagination\r\n         },\r\n       );\r\n \r\n-      print('\\n=== Raw API Response ===');\r\n-      print('Status Code: ${response.statusCode}');\r\n-      print('Headers: ${response.headers}');\r\n-      print('Response Data:');\r\n-      print(response.data);\r\n-\r\n-      return response.data['messages'] ?? [];\r\n+      return response.data['notifications'] ?? [];\r\n     } catch (e) {\r\n-      print('\\n=== Error in getNotifications ===');\r\n-      print('Error details: $e');\r\n-      rethrow;\r\n+      print('Error trying alternative notification APIs: $e');\r\n+      return [];\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1742922300122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n       final response = await _dio.get(\r\n         \"$baseUrl/webservice/rest/server.php\",\r\n         queryParameters: {\r\n           'wstoken': token,\r\n-          'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n-          // 'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n+          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n+           'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n           'moodlewsrestformat': 'json',\r\n           'useridto': userId,\r\n           'limitnum': 20,  // Add pagination\r\n         },\r\n"
                },
                {
                    "date": 1742995942808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,47 @@\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n \r\n+  ApiService() {\r\n+    // Add this interceptor for testing notifications\r\n+    if (kDebugMode) { // Only in debug mode\r\n+      _dio.interceptors.add(InterceptorsWrapper(\r\n+        onRequest: (options, handler) {\r\n+          // Check if it's a notifications request\r\n+          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n+            // Mock response data\r\n+            final mockNotifications = [\r\n+              {\r\n+                'id': 1,\r\n+                'subject': 'Mock Notification 1',\r\n+                'smallmessage': 'This is a test notification!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+              {\r\n+                'id': 2,\r\n+                'subject': 'Assignment Due',\r\n+                'smallmessage': 'Your assignment is due tomorrow!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+            ];\r\n+\r\n+            // Simulate a successful response\r\n+            handler.resolve(\r\n+              Response(\r\n+                requestOptions: options,\r\n+                data: {'notifications': mockNotifications},\r\n+              ),\r\n+            );\r\n+            return;\r\n+          }\r\n+          // Continue with the original request for other APIs\r\n+          handler.next(options);\r\n+        },\r\n+      ));\r\n+    }\r\n+  }\r\n+\r\n   Future<bool> validateMoodleUrl(String url) async {\r\n     try {\r\n       final response = await _dio.get(url);\r\n       return response.statusCode == 200;\r\n"
                },
                {
                    "date": 1742996028310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n+  var kDebugMode = true;\r\n \r\n   ApiService() {\r\n     // Add this interceptor for testing notifications\r\n     if (kDebugMode) { // Only in debug mode\r\n"
                },
                {
                    "date": 1742998270468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n-  var kDebugMode = true;\r\n+  var kDebugMode = false;\r\n \r\n   ApiService() {\r\n     // Add this interceptor for testing notifications\r\n     if (kDebugMode) { // Only in debug mode\r\n"
                },
                {
                    "date": 1743059094874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+import 'dart:ffi';\r\n+\r\n+import 'package:dio/dio.dart';\r\n+\r\n+class ApiService {\r\n+  final Dio _dio = Dio();\r\n+  var kDebugMode = false;\r\n+\r\n+  ApiService() {\r\n+    // Add this interceptor for testing notifications\r\n+    if (kDebugMode) { // Only in debug mode\r\n+      _dio.interceptors.add(InterceptorsWrapper(\r\n+        onRequest: (options, handler) {\r\n+          // Check if it's a notifications request\r\n+          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n+            // Mock response data\r\n+            final mockNotifications = [\r\n+              {\r\n+                'id': 1,\r\n+                'subject': 'Mock Notification 1',\r\n+                'smallmessage': 'This is a test notification!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+              {\r\n+                'id': 2,\r\n+                'subject': 'Assignment Due',\r\n+                'smallmessage': 'Your assignment is due tomorrow!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+            ];\r\n+\r\n+            // Simulate a successful response\r\n+            handler.resolve(\r\n+              Response(\r\n+                requestOptions: options,\r\n+                data: {'notifications': mockNotifications},\r\n+              ),\r\n+            );\r\n+            return;\r\n+          }\r\n+          // Continue with the original request for other APIs\r\n+          handler.next(options);\r\n+        },\r\n+      ));\r\n+    }\r\n+  }\r\n+\r\n+  Future<bool> validateMoodleUrl(String url) async {\r\n+    try {\r\n+      final response = await _dio.get(url);\r\n+      return response.statusCode == 200;\r\n+    } catch (e) {\r\n+      return false;\r\n+    }\r\n+  }\r\n+\r\n+  Future<List> login(String baseUrl, String username, String password) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n+      );\r\n+      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        print(response.data);\r\n+        return [true, response.data[\"token\"]];\r\n+      }\r\n+      return [false,null];\r\n+    } catch (e) {\r\n+      return [false,null];\r\n+    }\r\n+  }\r\n+\r\n+  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_webservice_get_site_info',\r\n+          'moodlewsrestformat': 'json',\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get user info: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      // Try alternative API endpoints\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n+          'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n+          'moodlewsrestformat': 'json',\r\n+          'useridto': userId,\r\n+          'limitnum': 20,  // Add pagination\r\n+        },\r\n+      );\r\n+\r\n+      return response.data['notifications'] ?? [];\r\n+    } catch (e) {\r\n+      print('Error trying alternative notification APIs: $e');\r\n+      return [];\r\n+    }\r\n+  }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1743059956389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n-  var kDebugMode = false;\r\n+  var kDebugMode = true;\r\n \r\n   ApiService() {\r\n     // Add this interceptor for testing notifications\r\n     if (kDebugMode) { // Only in debug mode\r\n@@ -107,114 +107,4 @@\n     }\r\n   }\r\n }\r\n \r\n-import 'dart:ffi';\r\n-\r\n-import 'package:dio/dio.dart';\r\n-\r\n-class ApiService {\r\n-  final Dio _dio = Dio();\r\n-  var kDebugMode = false;\r\n-\r\n-  ApiService() {\r\n-    // Add this interceptor for testing notifications\r\n-    if (kDebugMode) { // Only in debug mode\r\n-      _dio.interceptors.add(InterceptorsWrapper(\r\n-        onRequest: (options, handler) {\r\n-          // Check if it's a notifications request\r\n-          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n-            // Mock response data\r\n-            final mockNotifications = [\r\n-              {\r\n-                'id': 1,\r\n-                'subject': 'Mock Notification 1',\r\n-                'smallmessage': 'This is a test notification!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-              {\r\n-                'id': 2,\r\n-                'subject': 'Assignment Due',\r\n-                'smallmessage': 'Your assignment is due tomorrow!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-            ];\r\n-\r\n-            // Simulate a successful response\r\n-            handler.resolve(\r\n-              Response(\r\n-                requestOptions: options,\r\n-                data: {'notifications': mockNotifications},\r\n-              ),\r\n-            );\r\n-            return;\r\n-          }\r\n-          // Continue with the original request for other APIs\r\n-          handler.next(options);\r\n-        },\r\n-      ));\r\n-    }\r\n-  }\r\n-\r\n-  Future<bool> validateMoodleUrl(String url) async {\r\n-    try {\r\n-      final response = await _dio.get(url);\r\n-      return response.statusCode == 200;\r\n-    } catch (e) {\r\n-      return false;\r\n-    }\r\n-  }\r\n-\r\n-  Future<List> login(String baseUrl, String username, String password) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n-      );\r\n-      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n-        print(response.data);\r\n-        return [true, response.data[\"token\"]];\r\n-      }\r\n-      return [false,null];\r\n-    } catch (e) {\r\n-      return [false,null];\r\n-    }\r\n-  }\r\n-\r\n-  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_webservice_get_site_info',\r\n-          'moodlewsrestformat': 'json',\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get user info: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n-    try {\r\n-      // Try alternative API endpoints\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n-           'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n-          'moodlewsrestformat': 'json',\r\n-          'useridto': userId,\r\n-          'limitnum': 20,  // Add pagination\r\n-        },\r\n-      );\r\n-\r\n-      return response.data['notifications'] ?? [];\r\n-    } catch (e) {\r\n-      print('Error trying alternative notification APIs: $e');\r\n-      return [];\r\n-    }\r\n-  }\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1743059967205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n-  var kDebugMode = true;\r\n+  var kDebugMode = True;\r\n \r\n   ApiService() {\r\n     // Add this interceptor for testing notifications\r\n     if (kDebugMode) { // Only in debug mode\r\n"
                },
                {
                    "date": 1743059974104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:dio/dio.dart';\r\n \r\n class ApiService {\r\n   final Dio _dio = Dio();\r\n-  var kDebugMode = True;\r\n+  var kDebugMode = true;\r\n \r\n   ApiService() {\r\n     // Add this interceptor for testing notifications\r\n     if (kDebugMode) { // Only in debug mode\r\n"
                },
                {
                    "date": 1743061838162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,25 @@\n       throw Exception('Failed to get user info: $e');\r\n     }\r\n   }\r\n \r\n+  Future<List<dynamic>> getCourses(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_enrol_get_users_courses',\r\n+          'moodlewsrestformat': 'json',\r\n+          'userid': userId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get courses: $e');\r\n+    }\r\n+  }\r\n+\r\n   Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n     try {\r\n       // Try alternative API endpoints\r\n       final response = await _dio.get(\r\n"
                },
                {
                    "date": 1743062291130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,25 @@\n       throw Exception('Failed to get courses: $e');\r\n     }\r\n   }\r\n \r\n+  Future<List<dynamic>> getCoursesContent(String baseUrl, String token, int courseId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_course_get_contents',\r\n+          'moodlewsrestformat': 'json',\r\n+          'courseid': courseId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get course content: $e');\r\n+    }\r\n+  }\r\n+\r\n   Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n     try {\r\n       // Try alternative API endpoints\r\n       final response = await _dio.get(\r\n"
                },
                {
                    "date": 1743062464335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,6 +139,23 @@\n       print('Error trying alternative notification APIs: $e');\r\n       return [];\r\n     }\r\n   }\r\n+\r\n+  Future<void> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n+    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        serverUrl,\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'mod_forum_get_forum_discussion',\r\n+          'moodlewsrestformat': 'json',\r\n+          'discussionid': discussionId,\r\n+        },\r\n+      );\r\n+    } catch (e) {\r\n+      print('Error fetching discussion data: $e');\r\n+    }\r\n+  }\r\n }\r\n \r\n"
                },
                {
                    "date": 1743062620208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       return [];\r\n     }\r\n   }\r\n \r\n-  Future<void> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n+  Future<List<dynamic>> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n     final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n@@ -152,8 +152,10 @@\n           'moodlewsrestformat': 'json',\r\n           'discussionid': discussionId,\r\n         },\r\n       );\r\n+\r\n+      return response.data;\r\n     } catch (e) {\r\n       print('Error fetching discussion data: $e');\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1743062651804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,8 +156,9 @@\n \r\n       return response.data;\r\n     } catch (e) {\r\n       print('Error fetching discussion data: $e');\r\n+      return [];\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1743062674795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       return [];\r\n     }\r\n   }\r\n \r\n-  Future<List<dynamic>> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n+  Future<Map<String, dynamic>?> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n     final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n@@ -156,9 +156,9 @@\n \r\n       return response.data;\r\n     } catch (e) {\r\n       print('Error fetching discussion data: $e');\r\n-      return [];\r\n+      return {};\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1743062848864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       return [];\r\n     }\r\n   }\r\n \r\n-  Future<Map<String, dynamic>?> fetchDiscussionData(String baseUrl, String token, int discussionId) async {\r\n+  Future<Map<String, dynamic>?> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n     final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n"
                },
                {
                    "date": 1743062926938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+import 'dart:ffi';\r\n+\r\n+import 'package:dio/dio.dart';\r\n+\r\n+class ApiService {\r\n+  final Dio _dio = Dio();\r\n+  var kDebugMode = true;\r\n+\r\n+  ApiService() {\r\n+    // Add this interceptor for testing notifications\r\n+    if (kDebugMode) { // Only in debug mode\r\n+      _dio.interceptors.add(InterceptorsWrapper(\r\n+        onRequest: (options, handler) {\r\n+          // Check if it's a notifications request\r\n+          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n+            // Mock response data\r\n+            final mockNotifications = [\r\n+              {\r\n+                'id': 1,\r\n+                'subject': 'Mock Notification 1',\r\n+                'smallmessage': 'This is a test notification!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+              {\r\n+                'id': 2,\r\n+                'subject': 'Assignment Due',\r\n+                'smallmessage': 'Your assignment is due tomorrow!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+            ];\r\n+\r\n+            // Simulate a successful response\r\n+            handler.resolve(\r\n+              Response(\r\n+                requestOptions: options,\r\n+                data: {'notifications': mockNotifications},\r\n+              ),\r\n+            );\r\n+            return;\r\n+          }\r\n+          // Continue with the original request for other APIs\r\n+          handler.next(options);\r\n+        },\r\n+      ));\r\n+    }\r\n+  }\r\n+\r\n+  Future<bool> validateMoodleUrl(String url) async {\r\n+    try {\r\n+      final response = await _dio.get(url);\r\n+      return response.statusCode == 200;\r\n+    } catch (e) {\r\n+      return false;\r\n+    }\r\n+  }\r\n+\r\n+  Future<List> login(String baseUrl, String username, String password) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n+      );\r\n+      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        print(response.data);\r\n+        return [true, response.data[\"token\"]];\r\n+      }\r\n+      return [false,null];\r\n+    } catch (e) {\r\n+      return [false,null];\r\n+    }\r\n+  }\r\n+\r\n+  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_webservice_get_site_info',\r\n+          'moodlewsrestformat': 'json',\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get user info: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getCourses(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_enrol_get_users_courses',\r\n+          'moodlewsrestformat': 'json',\r\n+          'userid': userId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get courses: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getCoursesContent(String baseUrl, String token, int courseId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_course_get_contents',\r\n+          'moodlewsrestformat': 'json',\r\n+          'courseid': courseId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get course content: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      // Try alternative API endpoints\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n+          'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n+          'moodlewsrestformat': 'json',\r\n+          'useridto': userId,\r\n+          'limitnum': 20,  // Add pagination\r\n+        },\r\n+      );\r\n+\r\n+      return response.data['notifications'] ?? [];\r\n+    } catch (e) {\r\n+      print('Error trying alternative notification APIs: $e');\r\n+      return [];\r\n+    }\r\n+  }\r\n+\r\n+  Future<Map<String, dynamic>> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n+    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        serverUrl,\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'mod_forum_get_forum_discussion',\r\n+          'moodlewsrestformat': 'json',\r\n+          'discussionid': discussionId,\r\n+        },\r\n+      );\r\n+\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      print('Error fetching discussion data: $e');\r\n+      return {};\r\n+    }\r\n+  }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1743063754230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,170 +159,30 @@\n       print('Error fetching discussion data: $e');\r\n       return {};\r\n     }\r\n   }\r\n-}\r\n \r\n-import 'dart:ffi';\r\n-\r\n-import 'package:dio/dio.dart';\r\n-\r\n-class ApiService {\r\n-  final Dio _dio = Dio();\r\n-  var kDebugMode = true;\r\n-\r\n-  ApiService() {\r\n-    // Add this interceptor for testing notifications\r\n-    if (kDebugMode) { // Only in debug mode\r\n-      _dio.interceptors.add(InterceptorsWrapper(\r\n-        onRequest: (options, handler) {\r\n-          // Check if it's a notifications request\r\n-          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n-            // Mock response data\r\n-            final mockNotifications = [\r\n-              {\r\n-                'id': 1,\r\n-                'subject': 'Mock Notification 1',\r\n-                'smallmessage': 'This is a test notification!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-              {\r\n-                'id': 2,\r\n-                'subject': 'Assignment Due',\r\n-                'smallmessage': 'Your assignment is due tomorrow!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-            ];\r\n-\r\n-            // Simulate a successful response\r\n-            handler.resolve(\r\n-              Response(\r\n-                requestOptions: options,\r\n-                data: {'notifications': mockNotifications},\r\n-              ),\r\n-            );\r\n-            return;\r\n-          }\r\n-          // Continue with the original request for other APIs\r\n-          handler.next(options);\r\n-        },\r\n-      ));\r\n-    }\r\n-  }\r\n-\r\n-  Future<bool> validateMoodleUrl(String url) async {\r\n-    try {\r\n-      final response = await _dio.get(url);\r\n-      return response.statusCode == 200;\r\n-    } catch (e) {\r\n-      return false;\r\n-    }\r\n-  }\r\n-\r\n-  Future<List> login(String baseUrl, String username, String password) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n-      );\r\n-      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n-        print(response.data);\r\n-        return [true, response.data[\"token\"]];\r\n-      }\r\n-      return [false,null];\r\n-    } catch (e) {\r\n-      return [false,null];\r\n-    }\r\n-  }\r\n-\r\n-  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_webservice_get_site_info',\r\n-          'moodlewsrestformat': 'json',\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get user info: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getCourses(String baseUrl, String token, int userId) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_enrol_get_users_courses',\r\n-          'moodlewsrestformat': 'json',\r\n-          'userid': userId,\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get courses: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getCoursesContent(String baseUrl, String token, int courseId) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_course_get_contents',\r\n-          'moodlewsrestformat': 'json',\r\n-          'courseid': courseId,\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get course content: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n-    try {\r\n-      // Try alternative API endpoints\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n-          'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n-          'moodlewsrestformat': 'json',\r\n-          'useridto': userId,\r\n-          'limitnum': 20,  // Add pagination\r\n-        },\r\n-      );\r\n-\r\n-      return response.data['notifications'] ?? [];\r\n-    } catch (e) {\r\n-      print('Error trying alternative notification APIs: $e');\r\n-      return [];\r\n-    }\r\n-  }\r\n-\r\n-  Future<Map<String, dynamic>?> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n+  Future<void> getForumDiscussionsForum(String baseUrl, String token, int forumId) async {\r\n     final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n         queryParameters: {\r\n           'wstoken': token,\r\n-          'wsfunction': 'mod_forum_get_forum_discussion',\r\n+          'wsfunction': 'mod_forum_get_forum_discussions',\r\n           'moodlewsrestformat': 'json',\r\n-          'discussionid': discussionId,\r\n+          'forumid': forumId,\r\n         },\r\n       );\r\n-\r\n-      return response.data;\r\n+      setState(() {\r\n+        _discussions = response.data['discussions'] ?? [];\r\n+        _isLoading = false;\r\n+      });\r\n     } catch (e) {\r\n-      print('Error fetching discussion data: $e');\r\n-      return {};\r\n+      print('Error fetching discussions: $e');\r\n+      setState(() {\r\n+        _isLoading = false;\r\n+      });\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1743063782378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,12 +172,10 @@\n           'moodlewsrestformat': 'json',\r\n           'forumid': forumId,\r\n         },\r\n       );\r\n-      setState(() {\r\n-        _discussions = response.data['discussions'] ?? [];\r\n-        _isLoading = false;\r\n-      });\r\n+     \r\n+      return response.data['discussions'];\r\n     } catch (e) {\r\n       print('Error fetching discussions: $e');\r\n       setState(() {\r\n         _isLoading = false;\r\n"
                },
                {
                    "date": 1743063804373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import 'dart:ffi';\r\n+\r\n+import 'package:dio/dio.dart';\r\n+\r\n+class ApiService {\r\n+  final Dio _dio = Dio();\r\n+  var kDebugMode = true;\r\n+\r\n+  ApiService() {\r\n+    // Add this interceptor for testing notifications\r\n+    if (kDebugMode) { // Only in debug mode\r\n+      _dio.interceptors.add(InterceptorsWrapper(\r\n+        onRequest: (options, handler) {\r\n+          // Check if it's a notifications request\r\n+          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n+            // Mock response data\r\n+            final mockNotifications = [\r\n+              {\r\n+                'id': 1,\r\n+                'subject': 'Mock Notification 1',\r\n+                'smallmessage': 'This is a test notification!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+              {\r\n+                'id': 2,\r\n+                'subject': 'Assignment Due',\r\n+                'smallmessage': 'Your assignment is due tomorrow!',\r\n+                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n+              },\r\n+            ];\r\n+\r\n+            // Simulate a successful response\r\n+            handler.resolve(\r\n+              Response(\r\n+                requestOptions: options,\r\n+                data: {'notifications': mockNotifications},\r\n+              ),\r\n+            );\r\n+            return;\r\n+          }\r\n+          // Continue with the original request for other APIs\r\n+          handler.next(options);\r\n+        },\r\n+      ));\r\n+    }\r\n+  }\r\n+\r\n+  Future<bool> validateMoodleUrl(String url) async {\r\n+    try {\r\n+      final response = await _dio.get(url);\r\n+      return response.statusCode == 200;\r\n+    } catch (e) {\r\n+      return false;\r\n+    }\r\n+  }\r\n+\r\n+  Future<List> login(String baseUrl, String username, String password) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n+      );\r\n+      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        print(response.data);\r\n+        return [true, response.data[\"token\"]];\r\n+      }\r\n+      return [false,null];\r\n+    } catch (e) {\r\n+      return [false,null];\r\n+    }\r\n+  }\r\n+\r\n+  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_webservice_get_site_info',\r\n+          'moodlewsrestformat': 'json',\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get user info: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getCourses(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_enrol_get_users_courses',\r\n+          'moodlewsrestformat': 'json',\r\n+          'userid': userId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get courses: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getCoursesContent(String baseUrl, String token, int courseId) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'core_course_get_contents',\r\n+          'moodlewsrestformat': 'json',\r\n+          'courseid': courseId,\r\n+        },\r\n+      );\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      throw Exception('Failed to get course content: $e');\r\n+    }\r\n+  }\r\n+\r\n+  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n+    try {\r\n+      // Try alternative API endpoints\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/webservice/rest/server.php\",\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n+          'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n+          'moodlewsrestformat': 'json',\r\n+          'useridto': userId,\r\n+          'limitnum': 20,  // Add pagination\r\n+        },\r\n+      );\r\n+\r\n+      return response.data['notifications'] ?? [];\r\n+    } catch (e) {\r\n+      print('Error trying alternative notification APIs: $e');\r\n+      return [];\r\n+    }\r\n+  }\r\n+\r\n+  Future<Map<String, dynamic>> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n+    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        serverUrl,\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'mod_forum_get_forum_discussion',\r\n+          'moodlewsrestformat': 'json',\r\n+          'discussionid': discussionId,\r\n+        },\r\n+      );\r\n+\r\n+      return response.data;\r\n+    } catch (e) {\r\n+      print('Error fetching discussion data: $e');\r\n+      return {};\r\n+    }\r\n+  }\r\n+\r\n+  Future<List> getForumDiscussionsForum(String baseUrl, String token, int forumId) async {\r\n+    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        serverUrl,\r\n+        queryParameters: {\r\n+          'wstoken': token,\r\n+          'wsfunction': 'mod_forum_get_forum_discussions',\r\n+          'moodlewsrestformat': 'json',\r\n+          'forumid': forumId,\r\n+        },\r\n+      );\r\n+     \r\n+      return response.data['discussions'];\r\n+    } catch (e) {\r\n+      print('Error fetching discussions: $e');\r\n+      return [];\r\n+    }\r\n+  }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1743063914315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       return [];\r\n     }\r\n   }\r\n \r\n-  Future<Map<String, dynamic>> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n+  Future<Map<String, dynamic>> getDiscussions(String baseUrl, String token, int discussionId) async {\r\n     final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n@@ -181,190 +181,4 @@\n     }\r\n   }\r\n }\r\n \r\n-import 'dart:ffi';\r\n-\r\n-import 'package:dio/dio.dart';\r\n-\r\n-class ApiService {\r\n-  final Dio _dio = Dio();\r\n-  var kDebugMode = true;\r\n-\r\n-  ApiService() {\r\n-    // Add this interceptor for testing notifications\r\n-    if (kDebugMode) { // Only in debug mode\r\n-      _dio.interceptors.add(InterceptorsWrapper(\r\n-        onRequest: (options, handler) {\r\n-          // Check if it's a notifications request\r\n-          if (options.queryParameters['wsfunction'] == 'core_message_get_notifications') {\r\n-            // Mock response data\r\n-            final mockNotifications = [\r\n-              {\r\n-                'id': 1,\r\n-                'subject': 'Mock Notification 1',\r\n-                'smallmessage': 'This is a test notification!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(minutes: 5)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-              {\r\n-                'id': 2,\r\n-                'subject': 'Assignment Due',\r\n-                'smallmessage': 'Your assignment is due tomorrow!',\r\n-                'timecreated': DateTime.now().subtract(const Duration(hours: 2)).millisecondsSinceEpoch ~/ 1000,\r\n-              },\r\n-            ];\r\n-\r\n-            // Simulate a successful response\r\n-            handler.resolve(\r\n-              Response(\r\n-                requestOptions: options,\r\n-                data: {'notifications': mockNotifications},\r\n-              ),\r\n-            );\r\n-            return;\r\n-          }\r\n-          // Continue with the original request for other APIs\r\n-          handler.next(options);\r\n-        },\r\n-      ));\r\n-    }\r\n-  }\r\n-\r\n-  Future<bool> validateMoodleUrl(String url) async {\r\n-    try {\r\n-      final response = await _dio.get(url);\r\n-      return response.statusCode == 200;\r\n-    } catch (e) {\r\n-      return false;\r\n-    }\r\n-  }\r\n-\r\n-  Future<List> login(String baseUrl, String username, String password) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php?username=$username&password=$password&service=moodle_mobile_app\",\r\n-      );\r\n-      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n-        print(response.data);\r\n-        return [true, response.data[\"token\"]];\r\n-      }\r\n-      return [false,null];\r\n-    } catch (e) {\r\n-      return [false,null];\r\n-    }\r\n-  }\r\n-\r\n-  Future<Map<String, dynamic>> getUserInfo(String baseUrl, String token) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_webservice_get_site_info',\r\n-          'moodlewsrestformat': 'json',\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get user info: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getCourses(String baseUrl, String token, int userId) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_enrol_get_users_courses',\r\n-          'moodlewsrestformat': 'json',\r\n-          'userid': userId,\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get courses: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getCoursesContent(String baseUrl, String token, int courseId) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'core_course_get_contents',\r\n-          'moodlewsrestformat': 'json',\r\n-          'courseid': courseId,\r\n-        },\r\n-      );\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      throw Exception('Failed to get course content: $e');\r\n-    }\r\n-  }\r\n-\r\n-  Future<List<dynamic>> getNotifications(String baseUrl, String token, int userId) async {\r\n-    try {\r\n-      // Try alternative API endpoints\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/webservice/rest/server.php\",\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          //'wsfunction': 'core_message_get_popup_notifications', // Alternative 1\r\n-          'wsfunction': 'core_message_get_notifications',    // Alternative 2\r\n-          'moodlewsrestformat': 'json',\r\n-          'useridto': userId,\r\n-          'limitnum': 20,  // Add pagination\r\n-        },\r\n-      );\r\n-\r\n-      return response.data['notifications'] ?? [];\r\n-    } catch (e) {\r\n-      print('Error trying alternative notification APIs: $e');\r\n-      return [];\r\n-    }\r\n-  }\r\n-\r\n-  Future<Map<String, dynamic>> getForumDiscussions(String baseUrl, String token, int discussionId) async {\r\n-    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        serverUrl,\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'mod_forum_get_forum_discussion',\r\n-          'moodlewsrestformat': 'json',\r\n-          'discussionid': discussionId,\r\n-        },\r\n-      );\r\n-\r\n-      return response.data;\r\n-    } catch (e) {\r\n-      print('Error fetching discussion data: $e');\r\n-      return {};\r\n-    }\r\n-  }\r\n-\r\n-  Future<void> getForumDiscussionsForum(String baseUrl, String token, int forumId) async {\r\n-    final String serverUrl = '$baseUrl/webservice/rest/server.php';\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        serverUrl,\r\n-        queryParameters: {\r\n-          'wstoken': token,\r\n-          'wsfunction': 'mod_forum_get_forum_discussions',\r\n-          'moodlewsrestformat': 'json',\r\n-          'forumid': forumId,\r\n-        },\r\n-      );\r\n-     \r\n-      return response.data['discussions'];\r\n-    } catch (e) {\r\n-      print('Error fetching discussions: $e');\r\n-      setState(() {\r\n-        _isLoading = false;\r\n-      });\r\n-    }\r\n-  }\r\n-}\r\n-\r\n"
                }
            ],
            "date": 1742123178345,
            "name": "Commit-0",
            "content": "import 'package:dio/dio.dart';\r\n\r\nclass ApiService {\r\n  final Dio _dio = Dio();\r\n\r\n  Future<bool> validateMoodleUrl(String url) async {\r\n    try {\r\n      final response = await _dio.get(url);\r\n      return response.statusCode == 200;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n}"
        }
    ]
}