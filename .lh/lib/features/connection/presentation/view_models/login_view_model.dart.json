{
    "sourceFile": "lib/features/connection/presentation/view_models/login_view_model.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1742130429896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742130542693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:flutter/foundation.dart';\r\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n-import '../../../domain/repositories/auth_repository.dart';\r\n-import '../../../data/models/auth_request.dart';\r\n+import '../../../login/domain/repositories/auth_repository.dart';\r\n+import '../../../login/data/models/auth_request.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final AuthRepository repository;\r\n   final FlutterSecureStorage storage;\r\n"
                },
                {
                    "date": 1742130855638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter/foundation.dart';\r\n import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n-import '../../../login/domain/repositories/auth_repository.dart';\r\n+import '../../../login/data/repositories/auth_repository.dart';\r\n import '../../../login/data/models/auth_request.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final AuthRepository repository;\r\n"
                },
                {
                    "date": 1742137149625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,37 @@\n import 'package:flutter/foundation.dart';\r\n-import 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\n-import '../../../login/data/repositories/auth_repository.dart';\r\n-import '../../../login/data/models/auth_request.dart';\r\n+import 'package:aybudle/core/services/api_service.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n-  final AuthRepository repository;\r\n-  final FlutterSecureStorage storage;\r\n+  final String baseUrl;\r\n+  final ApiService _apiService = ApiService();\r\n \r\n+  String _username = '';\r\n+  String _password = '';\r\n   bool _isLoading = false;\r\n-  String _errorMessage = '';\r\n \r\n+  LoginViewModel(this.baseUrl);\r\n+\r\n   bool get isLoading => _isLoading;\r\n-  String get errorMessage => _errorMessage;\r\n \r\n-  LoginViewModel({\r\n-    required this.repository,\r\n-    required this.storage,\r\n-  });\r\n+  void setUsername(String value) {\r\n+    _username = value;\r\n+    notifyListeners();\r\n+  }\r\n \r\n-  Future<void> login({\r\n-    required String baseUrl,\r\n-    required String username,\r\n-    required String password,\r\n-  }) async {\r\n+  void setPassword(String value) {\r\n+    _password = value;\r\n+    notifyListeners();\r\n+  }\r\n+\r\n+  Future<bool> login() async {\r\n     _isLoading = true;\r\n     notifyListeners();\r\n \r\n-    try {\r\n-      final response = await repository.login(AuthRequest(\r\n-        baseUrl: baseUrl,\r\n\\ No newline at end of file\n-        username: username,\r\n-        password: password,\r\n-      ));\r\n+    bool result = await _apiService.login(baseUrl, _username, _password);\r\n \r\n-      await storage.write(key: 'auth_token', value: response.token);\r\n-      await storage.write(key: 'private_token', value: response.privateToken);\r\n-      await storage.write(key: 'user_id', value: response.userId.toString());\r\n-      \r\n-      _errorMessage = '';\r\n-    } catch (e) {\r\n-      _errorMessage = e.toString();\r\n-    } finally {\r\n-      _isLoading = false;\r\n-      notifyListeners();\r\n-    }\r\n+    _isLoading = false;\r\n+    notifyListeners();\r\n+\r\n+    return result;\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1742151454389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/foundation.dart';\r\n import 'package:aybudle/core/services/api_service.dart';\r\n+import 'package:dio/dio.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final String baseUrl;\r\n   final ApiService _apiService = ApiService();\r\n@@ -22,16 +23,24 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n-  Future<bool> login() async {\r\n-    _isLoading = true;\r\n-    notifyListeners();\r\n+  Future<bool> login(String baseUrl, String username, String password) async {\r\n+    try {\r\n+      final response = await _dio.get(\r\n+        \"$baseUrl/login/token.php\",\r\n+        queryParameters: {\r\n+          \"username\": username,\r\n+          \"password\": password,\r\n+          \"service\": \"moodle_mobile_app\",\r\n+        },\r\n+      );\r\n+      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n+        return true;\r\n+      }\r\n+      return false;\r\n+    } catch (e) {\r\n+      return false;\r\n+    }\r\n+  }\r\n \r\n-    bool result = await _apiService.login(baseUrl, _username, _password);\r\n-\r\n-    _isLoading = false;\r\n-    notifyListeners();\r\n-\r\n-    return result;\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1742151491080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final String baseUrl;\r\n   final ApiService _apiService = ApiService();\r\n+  final Dio _dio = Dio();\r\n \r\n   String _username = '';\r\n   String _password = '';\r\n   bool _isLoading = false;\r\n"
                },
                {
                    "date": 1742151651765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,15 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n-  Future<bool> login(String baseUrl, String username, String password) async {\r\n+  Future<bool> login(String baseUrl) async {\r\n     try {\r\n       final response = await _dio.get(\r\n         \"$baseUrl/login/token.php\",\r\n         queryParameters: {\r\n-          \"username\": username,\r\n-          \"password\": password,\r\n+          \"username\": _username,\r\n+          \"password\": _password,\r\n           \"service\": \"moodle_mobile_app\",\r\n         },\r\n       );\r\n       if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n"
                },
                {
                    "date": 1742151905822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \r\n   Future<bool> login(String baseUrl) async {\r\n     try {\r\n       final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php\",\r\n+        \"$baseUrl/login/token.php?\",\r\n         queryParameters: {\r\n           \"username\": _username,\r\n           \"password\": _password,\r\n           \"service\": \"moodle_mobile_app\",\r\n"
                },
                {
                    "date": 1742151959919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,10 @@\n import 'package:flutter/foundation.dart';\r\n import 'package:aybudle/core/services/api_service.dart';\r\n-import 'package:dio/dio.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final String baseUrl;\r\n   final ApiService _apiService = ApiService();\r\n-  final Dio _dio = Dio();\r\n \r\n   String _username = '';\r\n   String _password = '';\r\n   bool _isLoading = false;\r\n@@ -24,24 +22,16 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n-  Future<bool> login(String baseUrl) async {\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        \"$baseUrl/login/token.php?\",\r\n-        queryParameters: {\r\n-          \"username\": _username,\r\n-          \"password\": _password,\r\n-          \"service\": \"moodle_mobile_app\",\r\n-        },\r\n-      );\r\n-      if (response.statusCode == 200 && response.data[\"token\"] != null) {\r\n-        return true;\r\n-      }\r\n-      return false;\r\n-    } catch (e) {\r\n-      return false;\r\n-    }\r\n+  Future<bool> login() async {\r\n+    _isLoading = true;\r\n+    notifyListeners();\r\n+\r\n+    bool result = await _apiService.login(baseUrl, _username, _password);\r\n+\r\n+    _isLoading = false;\r\n+    notifyListeners();\r\n+\r\n+    return result;\r\n   }\r\n-\r\n }\r\n"
                },
                {
                    "date": 1742151992040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,13 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n+  void printInputs(){\r\n+    print(\"Username: $_username\");\r\n+    print(\"Password: $_password\");\r\n+  }\r\n+\r\n   Future<bool> login() async {\r\n     _isLoading = true;\r\n     notifyListeners();\r\n \r\n"
                },
                {
                    "date": 1742154401482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,14 @@\n \r\n   String _username = '';\r\n   String _password = '';\r\n   bool _isLoading = false;\r\n+  bool _rememberMe = false; // new flag\r\n \r\n   LoginViewModel(this.baseUrl);\r\n \r\n   bool get isLoading => _isLoading;\r\n+  bool get rememberMe => _rememberMe;\r\n \r\n   void setUsername(String value) {\r\n     _username = value;\r\n     notifyListeners();\r\n@@ -22,11 +24,11 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n-  void printInputs(){\r\n-    print(\"Username: $_username\");\r\n-    print(\"Password: $_password\");\r\n+  void toggleRememberMe(bool? value) {\r\n+    _rememberMe = value ?? false;\r\n+    notifyListeners();\r\n   }\r\n \r\n   Future<bool> login() async {\r\n     _isLoading = true;\r\n@@ -36,7 +38,9 @@\n \r\n     _isLoading = false;\r\n     notifyListeners();\r\n \r\n+    // Optionally, store credentials persistently if _rememberMe is true\r\n+\r\n     return result;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1742154741659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:flutter/foundation.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n import 'package:aybudle/core/services/api_service.dart';\r\n \r\n class LoginViewModel with ChangeNotifier {\r\n   final String baseUrl;\r\n@@ -7,15 +8,19 @@\n \r\n   String _username = '';\r\n   String _password = '';\r\n   bool _isLoading = false;\r\n-  bool _rememberMe = false; // new flag\r\n+  bool _rememberMe = false;\r\n \r\n-  LoginViewModel(this.baseUrl);\r\n-\r\n+  String get username => _username;\r\n+  String get password => _password;\r\n   bool get isLoading => _isLoading;\r\n   bool get rememberMe => _rememberMe;\r\n \r\n+  LoginViewModel(this.baseUrl) {\r\n+    _loadRememberedCredentials();\r\n+  }\r\n+\r\n   void setUsername(String value) {\r\n     _username = value;\r\n     notifyListeners();\r\n   }\r\n@@ -24,13 +29,31 @@\n     _password = value;\r\n     notifyListeners();\r\n   }\r\n \r\n-  void toggleRememberMe(bool? value) {\r\n+  void toggleRememberMe(bool? value) async {\r\n     _rememberMe = value ?? false;\r\n     notifyListeners();\r\n+    // If disabling \"Remember Me\", clear saved credentials\r\n+    if (!_rememberMe) {\r\n+      final prefs = await SharedPreferences.getInstance();\r\n+      await prefs.remove('rememberedUsername');\r\n+      await prefs.remove('rememberedPassword');\r\n+    }\r\n   }\r\n \r\n+  Future<void> _loadRememberedCredentials() async {\r\n+    final prefs = await SharedPreferences.getInstance();\r\n+    final savedUsername = prefs.getString('rememberedUsername');\r\n+    final savedPassword = prefs.getString('rememberedPassword');\r\n+    if (savedUsername != null && savedPassword != null) {\r\n+      _username = savedUsername;\r\n+      _password = savedPassword;\r\n+      _rememberMe = true;\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n   Future<bool> login() async {\r\n     _isLoading = true;\r\n     notifyListeners();\r\n \r\n@@ -38,9 +61,12 @@\n \r\n     _isLoading = false;\r\n     notifyListeners();\r\n \r\n-    // Optionally, store credentials persistently if _rememberMe is true\r\n-\r\n+    if (_rememberMe && result) {\r\n+      final prefs = await SharedPreferences.getInstance();\r\n+      await prefs.setString('rememberedUsername', _username);\r\n+      await prefs.setString('rememberedPassword', _password);\r\n+    }\r\n     return result;\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1742130429896,
            "name": "Commit-0",
            "content": "import 'package:flutter/foundation.dart';\r\nimport 'package:flutter_secure_storage/flutter_secure_storage.dart';\r\nimport '../../../domain/repositories/auth_repository.dart';\r\nimport '../../../data/models/auth_request.dart';\r\n\r\nclass LoginViewModel with ChangeNotifier {\r\n  final AuthRepository repository;\r\n  final FlutterSecureStorage storage;\r\n\r\n  bool _isLoading = false;\r\n  String _errorMessage = '';\r\n\r\n  bool get isLoading => _isLoading;\r\n  String get errorMessage => _errorMessage;\r\n\r\n  LoginViewModel({\r\n    required this.repository,\r\n    required this.storage,\r\n  });\r\n\r\n  Future<void> login({\r\n    required String baseUrl,\r\n    required String username,\r\n    required String password,\r\n  }) async {\r\n    _isLoading = true;\r\n    notifyListeners();\r\n\r\n    try {\r\n      final response = await repository.login(AuthRequest(\r\n        baseUrl: baseUrl,\r\n        username: username,\r\n        password: password,\r\n      ));\r\n\r\n      await storage.write(key: 'auth_token', value: response.token);\r\n      await storage.write(key: 'private_token', value: response.privateToken);\r\n      await storage.write(key: 'user_id', value: response.userId.toString());\r\n      \r\n      _errorMessage = '';\r\n    } catch (e) {\r\n      _errorMessage = e.toString();\r\n    } finally {\r\n      _isLoading = false;\r\n      notifyListeners();\r\n    }\r\n  }\r\n}"
        }
    ]
}