{
    "sourceFile": "lib/features/connection/presentation/screens/connection_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1742123338252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742123629368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import 'core/constants/app_constants.dart';\r\n-import 'view_models/connection_view_model.dart';\r\n+import '../../../../core/constants/app_constants.dart';\r\n+import '../view_models/connection_view_model.dart';\r\n import 'webview_screen.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n"
                },
                {
                    "date": 1742127271034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,10 @@\n                               ),\r\n                             );\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n-                              const SnackBar(\r\n-                                content: Text('Invalid URL or connection failed'),\r\n+                              SnackBar(\r\n+                                content: Text('Invalid URL or connection failed: ${viewModel.url}'),\r\n                               ),\r\n                             );\r\n                           }\r\n                         },\r\n"
                },
                {
                    "date": 1742131634486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                           if (await viewModel.connectToSite()) {\r\n                             Navigator.push(\r\n                               context,\r\n                               MaterialPageRoute(\r\n-                                builder: (_) => WebViewScreen(url: viewModel.url),\r\n+                                builder: (_) => LoginScreen(baseUrl: viewModel.url),\r\n                               ),\r\n                             );\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n"
                },
                {
                    "date": 1742131964482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:aybudle/features/connection/presentation/screens/login_screen.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import '../../../../core/constants/app_constants.dart';\r\n import '../view_models/connection_view_model.dart';\r\n"
                },
                {
                    "date": 1742131970364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import '../../../../core/constants/app_constants.dart';\r\n import '../view_models/connection_view_model.dart';\r\n-import 'webview_screen.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n \r\n"
                },
                {
                    "date": 1742132158435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import 'package:aybudle/features/connection/presentation/screens/login_screen.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import '../../../../core/constants/app_constants.dart';\r\n import '../view_models/connection_view_model.dart';\r\n"
                },
                {
                    "date": 1742132192903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import '../../../../core/constants/app_constants.dart';\r\n-import '../view_models/connection_view_model.dart';\r\n+import 'core/constants/app_constants.dart';\r\n+import 'view_models/connection_view_model.dart';\r\n+import 'webview_screen.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n \r\n@@ -32,15 +33,15 @@\n                           if (await viewModel.connectToSite()) {\r\n                             Navigator.push(\r\n                               context,\r\n                               MaterialPageRoute(\r\n-                                builder: (_) => LoginScreen(baseUrl: viewModel.url),\r\n+                                builder: (_) => WebViewScreen(url: viewModel.url),\r\n                               ),\r\n                             );\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n-                              SnackBar(\r\n-                                content: Text('Invalid URL or connection failed: ${viewModel.url}'),\r\n+                              const SnackBar(\r\n+                                content: Text('Invalid URL or connection failed'),\r\n                               ),\r\n                             );\r\n                           }\r\n                         },\r\n"
                },
                {
                    "date": 1742132251871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n+import 'package:aybudle/core/constants/app_constants.dart';\r\n+import 'package:aybudle/features/connection/presentation/view_models/connection_view_model.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import 'core/constants/app_constants.dart';\r\n-import 'view_models/connection_view_model.dart';\r\n import 'webview_screen.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n"
                },
                {
                    "date": 1742137314311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:aybudle/core/constants/app_constants.dart';\r\n import 'package:aybudle/features/connection/presentation/view_models/connection_view_model.dart';\r\n+import 'package:aybudle/features/connection/presentation/screens/login_screen.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n-import 'webview_screen.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n \r\n@@ -33,9 +33,9 @@\n                           if (await viewModel.connectToSite()) {\r\n                             Navigator.push(\r\n                               context,\r\n                               MaterialPageRoute(\r\n-                                builder: (_) => WebViewScreen(url: viewModel.url),\r\n+                                builder: (_) => LoginScreen(baseUrl: viewModel.url),\r\n                               ),\r\n                             );\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -57,5 +57,5 @@\n         ),\r\n       ),\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1742141323065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,5 +57,5 @@\n         ),\r\n       ),\r\n     );\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742154371487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,17 @@\n                   ),\r\n                   onChanged: viewModel.setUrl,\r\n                   keyboardType: TextInputType.url,\r\n                 ),\r\n-                const SizedBox(height: 20),\r\n+                const SizedBox(height: 10),\r\n+                // Remember Site checkbox\r\n+                CheckboxListTile(\r\n+                  title: const Text(\"Remember Site\"),\r\n+                  value: viewModel.rememberSite,\r\n+                  onChanged: viewModel.toggleRememberSite,\r\n+                  controlAffinity: ListTileControlAffinity.leading,\r\n+                ),\r\n+                const SizedBox(height: 10),\r\n                 ElevatedButton(\r\n                   onPressed: viewModel.isLoading\r\n                       ? null\r\n                       : () async {\r\n@@ -57,5 +65,5 @@\n         ),\r\n       ),\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1742154751378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,11 @@\n                     border: OutlineInputBorder(),\r\n                   ),\r\n                   onChanged: viewModel.setUrl,\r\n                   keyboardType: TextInputType.url,\r\n+                  controller: TextEditingController(text: viewModel.url),\r\n                 ),\r\n                 const SizedBox(height: 10),\r\n-                // Remember Site checkbox\r\n                 CheckboxListTile(\r\n                   title: const Text(\"Remember Site\"),\r\n                   value: viewModel.rememberSite,\r\n                   onChanged: viewModel.toggleRememberSite,\r\n@@ -41,16 +41,17 @@\n                           if (await viewModel.connectToSite()) {\r\n                             Navigator.push(\r\n                               context,\r\n                               MaterialPageRoute(\r\n-                                builder: (_) => LoginScreen(baseUrl: viewModel.url),\r\n+                                builder: (_) =>\r\n+                                    LoginScreen(baseUrl: viewModel.url),\r\n                               ),\r\n                             );\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n                               const SnackBar(\r\n-                                content: Text('Invalid URL or connection failed'),\r\n-                              ),\r\n+                                  content: Text(\r\n+                                      'Invalid URL or connection failed')),\r\n                             );\r\n                           }\r\n                         },\r\n                   child: const Text(AppConstants.connectButtonText),\r\n"
                },
                {
                    "date": 1742222977265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,64 @@\n import 'package:aybudle/core/constants/app_constants.dart';\r\n+import 'package:aybudle/features/connection/presentation/screens/login_screen.dart';\r\n+import 'package:aybudle/features/connection/presentation/screens/webview_screen.dart';\r\n import 'package:aybudle/features/connection/presentation/view_models/connection_view_model.dart';\r\n-import 'package:aybudle/features/connection/presentation/screens/login_screen.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n class ConnectionScreen extends StatelessWidget {\r\n   const ConnectionScreen({super.key});\r\n \r\n+  void _showChoiceDialog(BuildContext context, String url) {\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (context) {\r\n+        return AlertDialog(\r\n+          title: const Text(\"Choose Option\"),\r\n+          content: const Text(\"Do you want to open the URL directly or use the app login?\"),\r\n+          actions: [\r\n+            TextButton(\r\n+              onPressed: () {\r\n+                // Option: Open URL directly (e.g., in WebView)\r\n+                Navigator.pop(context); // Close dialog\r\n+                Navigator.push(\r\n+                  context,\r\n+                  MaterialPageRoute(\r\n+                    builder: (_) => WebViewScreen(url: url),\r\n+                  ),\r\n+                );\r\n+              },\r\n+              child: const Text(\"Open URL\"),\r\n+            ),\r\n+            TextButton(\r\n+              onPressed: () {\r\n+                // Option: Open in App (go to login)\r\n+                Navigator.pop(context); // Close dialog\r\n+                Navigator.push(\r\n+                  context,\r\n+                  MaterialPageRoute(\r\n+                    builder: (_) => LoginScreen(baseUrl: url),\r\n+                  ),\r\n+                );\r\n+              },\r\n+              child: const Text(\"Open in App\"),\r\n+            ),\r\n+          ],\r\n+        );\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(title: const Text(AppConstants.appName)),\r\n       body: Padding(\r\n         padding: const EdgeInsets.all(16.0),\r\n         child: Consumer<ConnectionViewModel>(\r\n           builder: (context, viewModel, _) {\r\n+            // Use a TextEditingController that persists state if needed.\r\n+            final urlController = TextEditingController(text: viewModel.url);\r\n             return Column(\r\n               children: [\r\n                 TextField(\r\n                   decoration: const InputDecoration(\r\n@@ -23,9 +66,9 @@\n                     border: OutlineInputBorder(),\r\n                   ),\r\n                   onChanged: viewModel.setUrl,\r\n                   keyboardType: TextInputType.url,\r\n-                  controller: TextEditingController(text: viewModel.url),\r\n+                  controller: urlController,\r\n                 ),\r\n                 const SizedBox(height: 10),\r\n                 CheckboxListTile(\r\n                   title: const Text(\"Remember Site\"),\r\n@@ -37,21 +80,17 @@\n                 ElevatedButton(\r\n                   onPressed: viewModel.isLoading\r\n                       ? null\r\n                       : () async {\r\n+                          // Validate the URL connection first.\r\n                           if (await viewModel.connectToSite()) {\r\n-                            Navigator.push(\r\n-                              context,\r\n-                              MaterialPageRoute(\r\n-                                builder: (_) =>\r\n-                                    LoginScreen(baseUrl: viewModel.url),\r\n-                              ),\r\n-                            );\r\n+                            // Instead of directly navigating to the login screen,\r\n+                            // show a dialog for the user to choose the desired action.\r\n+                            _showChoiceDialog(context, viewModel.url);\r\n                           } else {\r\n                             ScaffoldMessenger.of(context).showSnackBar(\r\n                               const SnackBar(\r\n-                                  content: Text(\r\n-                                      'Invalid URL or connection failed')),\r\n+                                  content: Text('Invalid URL or connection failed')),\r\n                             );\r\n                           }\r\n                         },\r\n                   child: const Text(AppConstants.connectButtonText),\r\n"
                }
            ],
            "date": 1742123338252,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'core/constants/app_constants.dart';\r\nimport 'view_models/connection_view_model.dart';\r\nimport 'webview_screen.dart';\r\n\r\nclass ConnectionScreen extends StatelessWidget {\r\n  const ConnectionScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(title: const Text(AppConstants.appName)),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16.0),\r\n        child: Consumer<ConnectionViewModel>(\r\n          builder: (context, viewModel, _) {\r\n            return Column(\r\n              children: [\r\n                TextField(\r\n                  decoration: const InputDecoration(\r\n                    labelText: AppConstants.urlHintText,\r\n                    border: OutlineInputBorder(),\r\n                  ),\r\n                  onChanged: viewModel.setUrl,\r\n                  keyboardType: TextInputType.url,\r\n                ),\r\n                const SizedBox(height: 20),\r\n                ElevatedButton(\r\n                  onPressed: viewModel.isLoading\r\n                      ? null\r\n                      : () async {\r\n                          if (await viewModel.connectToSite()) {\r\n                            Navigator.push(\r\n                              context,\r\n                              MaterialPageRoute(\r\n                                builder: (_) => WebViewScreen(url: viewModel.url),\r\n                              ),\r\n                            );\r\n                          } else {\r\n                            ScaffoldMessenger.of(context).showSnackBar(\r\n                              const SnackBar(\r\n                                content: Text('Invalid URL or connection failed'),\r\n                              ),\r\n                            );\r\n                          }\r\n                        },\r\n                  child: const Text(AppConstants.connectButtonText),\r\n                ),\r\n                if (viewModel.isLoading) ...[\r\n                  const SizedBox(height: 20),\r\n                  const CircularProgressIndicator(),\r\n                ]\r\n              ],\r\n            );\r\n          },\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}"
        }
    ]
}