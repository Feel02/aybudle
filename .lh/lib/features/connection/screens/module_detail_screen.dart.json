{
    "sourceFile": "lib/features/connection/screens/module_detail_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1742913275543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1742913275543,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:url_launcher/url_launcher.dart';\r\n\r\nclass ModuleDetailScreen extends StatelessWidget {\r\n  final Map<String, dynamic> module;\r\n\r\n  const ModuleDetailScreen({Key? key, required this.module}) : super(key: key);\r\n\r\n  // This helper widget displays key-value pairs.\r\n  Widget _buildDataRow(String key, dynamic value) {\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 4.0),\r\n      child: RichText(\r\n        text: TextSpan(\r\n          text: \"$key: \",\r\n          style: const TextStyle(fontWeight: FontWeight.bold, color: Colors.black),\r\n          children: [\r\n            TextSpan(\r\n              text: value?.toString() ?? 'N/A',\r\n              style: const TextStyle(fontWeight: FontWeight.normal),\r\n            )\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  // If there is a URL in the text, we can make it clickable.\r\n  Widget _buildLink(String url) {\r\n    return InkWell(\r\n      child: Text(url, style: const TextStyle(color: Colors.blue, decoration: TextDecoration.underline)),\r\n      onTap: () async {\r\n        if (await canLaunchUrl(Uri.parse(url))) {\r\n          await launchUrl(Uri.parse(url));\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    // Print the entire module data to the console for debugging.\r\n    print(\"Module Detail Data: $module\");\r\n\r\n    // Check for fields you might expect (you may need to adjust these based on your actual data).\r\n    final description = module['description'] ?? module['intro'] ?? module['summary'];\r\n    final attachments = module['contents'] is List ? module['contents'] : [];\r\n\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(module['name'] ?? 'Module Details'),\r\n      ),\r\n      body: SingleChildScrollView(\r\n        padding: const EdgeInsets.all(16.0),\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            _buildDataRow(\"Module ID\", module['id']),\r\n            _buildDataRow(\"Type\", module['modname']),\r\n            const SizedBox(height: 10),\r\n            const Text(\"Description/Text:\", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),\r\n            const SizedBox(height: 5),\r\n            Text(description?.toString() ?? \"No description available.\"),\r\n            const SizedBox(height: 20),\r\n            const Text(\"Attachments/Contents:\", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),\r\n            const SizedBox(height: 5),\r\n            if (attachments.isEmpty)\r\n              const Text(\"No attachments available.\")\r\n            else\r\n              ...attachments.map<Widget>((item) {\r\n                // Here we assume each attachment is a map that might contain a file URL and a filename.\r\n                final fileUrl = item['fileurl'] ?? item['url'];\r\n                final filename = item['filename'] ?? 'Attachment';\r\n                return ListTile(\r\n                  title: Text(filename),\r\n                  subtitle: fileUrl != null ? _buildLink(fileUrl) : const Text(\"No URL\"),\r\n                );\r\n              }).toList(),\r\n            const SizedBox(height: 20),\r\n            // Display the raw module data for debugging.\r\n            const Text(\"Raw Module Data:\", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),\r\n            const SizedBox(height: 5),\r\n            Text(module.toString()),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}