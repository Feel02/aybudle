{
    "sourceFile": "lib/features/connection/screens/discussion_posts_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1742910333062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742911961433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,20 +39,39 @@\n           'moodlewsrestformat': 'json',\r\n           'discussionid': widget.discussionId,\r\n         },\r\n       );\r\n-      setState(() {\r\n-        _posts = response.data['posts'] ?? [];\r\n-        _isLoading = false;\r\n-      });\r\n+      // Print the full response data for debugging\r\n+      print('Discussion Posts API Response: ${response.data}');\r\n+      \r\n+      // Check if the API returns a list of posts or a different structure.\r\n+      if (response.data is Map<String, dynamic> && response.data.containsKey('posts')) {\r\n+        setState(() {\r\n+          _posts = response.data['posts'] ?? [];\r\n+          _isLoading = false;\r\n+        });\r\n+      } else if (response.data is List) {\r\n+        // If it's already a list, assign it directly.\r\n+        setState(() {\r\n+          _posts = response.data;\r\n+          _isLoading = false;\r\n+        });\r\n+      } else {\r\n+        // Print an error if structure is not as expected.\r\n+        print('Unexpected response structure: ${response.data}');\r\n+        setState(() {\r\n+          _isLoading = false;\r\n+        });\r\n+      }\r\n     } catch (e) {\r\n       print('Error fetching discussion posts: $e');\r\n       setState(() {\r\n         _isLoading = false;\r\n       });\r\n     }\r\n   }\r\n \r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n"
                },
                {
                    "date": 1742912279255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,78 +18,83 @@\n }\r\n \r\n class _DiscussionPostsScreenState extends State<DiscussionPostsScreen> {\r\n   bool _isLoading = true;\r\n-  List _posts = [];\r\n+  Map<String, dynamic>? _discussionData;\r\n   final Dio _dio = Dio();\r\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-    fetchDiscussionPosts();\r\n+    fetchDiscussionData();\r\n   }\r\n \r\n-  Future<void> fetchDiscussionPosts() async {\r\n+  Future<void> fetchDiscussionData() async {\r\n     final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n         queryParameters: {\r\n           'wstoken': widget.token,\r\n-          'wsfunction': 'mod_forum_get_forum_discussion_posts',\r\n+          'wsfunction': 'mod_forum_get_forum_discussion',\r\n           'moodlewsrestformat': 'json',\r\n           'discussionid': widget.discussionId,\r\n         },\r\n       );\r\n-      // Print the full response data for debugging\r\n-      print('Discussion Posts API Response: ${response.data}');\r\n-      \r\n-      // Check if the API returns a list of posts or a different structure.\r\n-      if (response.data is Map<String, dynamic> && response.data.containsKey('posts')) {\r\n-        setState(() {\r\n-          _posts = response.data['posts'] ?? [];\r\n-          _isLoading = false;\r\n-        });\r\n-      } else if (response.data is List) {\r\n-        // If it's already a list, assign it directly.\r\n-        setState(() {\r\n-          _posts = response.data;\r\n-          _isLoading = false;\r\n-        });\r\n-      } else {\r\n-        // Print an error if structure is not as expected.\r\n-        print('Unexpected response structure: ${response.data}');\r\n-        setState(() {\r\n-          _isLoading = false;\r\n-        });\r\n-      }\r\n+\r\n+      // Debug print the complete response\r\n+      print('Discussion API Response: ${response.data}');\r\n+\r\n+      setState(() {\r\n+        _discussionData = response.data;\r\n+        _isLoading = false;\r\n+      });\r\n     } catch (e) {\r\n-      print('Error fetching discussion posts: $e');\r\n+      print('Error fetching discussion data: $e');\r\n       setState(() {\r\n         _isLoading = false;\r\n       });\r\n     }\r\n   }\r\n \r\n+  Widget _buildPostWidget(Map<String, dynamic> post) {\r\n+    // Customize how you display each post.\r\n+    return Card(\r\n+      margin: const EdgeInsets.symmetric(vertical: 4, horizontal: 8),\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.all(8.0),\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.start,\r\n+          children: [\r\n+            Text(post['subject'] ?? 'No Subject', style: const TextStyle(fontWeight: FontWeight.bold)),\r\n+            const SizedBox(height: 4),\r\n+            Text(post['message'] ?? 'No message available'),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n+    // Expecting the discussion data to have a structure with 'discussion' key and inside that a list of posts.\r\n+    final posts = _discussionData != null && _discussionData!['discussion'] != null\r\n+        ? (_discussionData!['discussion']['posts'] as List<dynamic>?) ?? []\r\n+        : [];\r\n+\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: const Text('Discussion Posts'),\r\n+        title: const Text('Discussion Details'),\r\n       ),\r\n       body: _isLoading\r\n           ? const Center(child: CircularProgressIndicator())\r\n-          : _posts.isEmpty\r\n+          : posts.isEmpty\r\n               ? const Center(child: Text('No posts found.'))\r\n               : ListView.builder(\r\n-                  itemCount: _posts.length,\r\n+                  itemCount: posts.length,\r\n                   itemBuilder: (context, index) {\r\n-                    final post = _posts[index];\r\n-                    return ListTile(\r\n-                      title: Text(post['subject'] ?? 'No Subject'),\r\n-                      subtitle: Text(post['message'] ?? ''),\r\n-                    );\r\n+                    final post = posts[index];\r\n+                    return _buildPostWidget(post);\r\n                   },\r\n                 ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1743062450664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     super.initState();\r\n     fetchDiscussionData();\r\n   }\r\n \r\n-  Future<void> fetchDiscussionData() async {\r\n+  /* Future<void> fetchDiscussionData() async {\r\n     final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n     try {\r\n       final response = await _dio.get(\r\n         serverUrl,\r\n@@ -53,9 +53,9 @@\n       setState(() {\r\n         _isLoading = false;\r\n       });\r\n     }\r\n-  }\r\n+  } */\r\n \r\n   Widget _buildPostWidget(Map<String, dynamic> post) {\r\n     // Customize how you display each post.\r\n     return Card(\r\n"
                },
                {
                    "date": 1743062515436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:aybudle/core/services/api_service.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:dio/dio.dart';\r\n \r\n class DiscussionPostsScreen extends StatefulWidget {\r\n@@ -19,9 +20,9 @@\n \r\n class _DiscussionPostsScreenState extends State<DiscussionPostsScreen> {\r\n   bool _isLoading = true;\r\n   Map<String, dynamic>? _discussionData;\r\n-  final Dio _dio = Dio();\r\n+  final ApiService _apiService = ApiService();\r\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n"
                },
                {
                    "date": 1743062547929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-    fetchDiscussionData();\r\n+    final discussion = _apiService.fetchDiscussionData(widget.baseUrl, widget.token, widget.discussionId);\r\n   }\r\n \r\n   /* Future<void> fetchDiscussionData() async {\r\n     final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n"
                },
                {
                    "date": 1743062623788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,15 @@\n   @override\r\n   void initState() {\r\n     super.initState();\r\n     final discussion = _apiService.fetchDiscussionData(widget.baseUrl, widget.token, widget.discussionId);\r\n+    discussion.then((value) {\r\n+      setState(() {\r\n+        _discussionData = value;\r\n+        _isLoading = false;\r\n+      });\r\n+    });\r\n+\r\n   }\r\n \r\n   /* Future<void> fetchDiscussionData() async {\r\n     final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n"
                },
                {
                    "date": 1743062771912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,36 +35,8 @@\n     });\r\n \r\n   }\r\n \r\n-  /* Future<void> fetchDiscussionData() async {\r\n-    final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n-    try {\r\n-      final response = await _dio.get(\r\n-        serverUrl,\r\n-        queryParameters: {\r\n-          'wstoken': widget.token,\r\n-          'wsfunction': 'mod_forum_get_forum_discussion',\r\n-          'moodlewsrestformat': 'json',\r\n-          'discussionid': widget.discussionId,\r\n-        },\r\n-      );\r\n-\r\n-      // Debug print the complete response\r\n-      print('Discussion API Response: ${response.data}');\r\n-\r\n-      setState(() {\r\n-        _discussionData = response.data;\r\n-        _isLoading = false;\r\n-      });\r\n-    } catch (e) {\r\n-      print('Error fetching discussion data: $e');\r\n-      setState(() {\r\n-        _isLoading = false;\r\n-      });\r\n-    }\r\n-  } */\r\n-\r\n   Widget _buildPostWidget(Map<String, dynamic> post) {\r\n     // Customize how you display each post.\r\n     return Card(\r\n       margin: const EdgeInsets.symmetric(vertical: 4, horizontal: 8),\r\n"
                },
                {
                    "date": 1743062866767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-    final discussion = _apiService.fetchDiscussionData(widget.baseUrl, widget.token, widget.discussionId);\r\n+    final discussion = _apiService.getForumDiscussions(widget.baseUrl, widget.token, widget.discussionId);\r\n     discussion.then((value) {\r\n       setState(() {\r\n         _discussionData = value;\r\n         _isLoading = false;\r\n"
                },
                {
                    "date": 1743063357794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n         _discussionData = value;\r\n         _isLoading = false;\r\n       });\r\n     });\r\n-\r\n   }\r\n \r\n   Widget _buildPostWidget(Map<String, dynamic> post) {\r\n     // Customize how you display each post.\r\n"
                },
                {
                    "date": 1743063918557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   @override\r\n   void initState() {\r\n     super.initState();\r\n-    final discussion = _apiService.getForumDiscussions(widget.baseUrl, widget.token, widget.discussionId);\r\n+    final discussion = _apiService.getDiscussions(widget.baseUrl, widget.token, widget.discussionId);\r\n     discussion.then((value) {\r\n       setState(() {\r\n         _discussionData = value;\r\n         _isLoading = false;\r\n"
                }
            ],
            "date": 1742910333062,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:dio/dio.dart';\r\n\r\nclass DiscussionPostsScreen extends StatefulWidget {\r\n  final String baseUrl;\r\n  final String token;\r\n  final int discussionId;\r\n\r\n  const DiscussionPostsScreen({\r\n    Key? key,\r\n    required this.baseUrl,\r\n    required this.token,\r\n    required this.discussionId,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  State<DiscussionPostsScreen> createState() => _DiscussionPostsScreenState();\r\n}\r\n\r\nclass _DiscussionPostsScreenState extends State<DiscussionPostsScreen> {\r\n  bool _isLoading = true;\r\n  List _posts = [];\r\n  final Dio _dio = Dio();\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    fetchDiscussionPosts();\r\n  }\r\n\r\n  Future<void> fetchDiscussionPosts() async {\r\n    final String serverUrl = '${widget.baseUrl}/webservice/rest/server.php';\r\n    try {\r\n      final response = await _dio.get(\r\n        serverUrl,\r\n        queryParameters: {\r\n          'wstoken': widget.token,\r\n          'wsfunction': 'mod_forum_get_forum_discussion_posts',\r\n          'moodlewsrestformat': 'json',\r\n          'discussionid': widget.discussionId,\r\n        },\r\n      );\r\n      setState(() {\r\n        _posts = response.data['posts'] ?? [];\r\n        _isLoading = false;\r\n      });\r\n    } catch (e) {\r\n      print('Error fetching discussion posts: $e');\r\n      setState(() {\r\n        _isLoading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Discussion Posts'),\r\n      ),\r\n      body: _isLoading\r\n          ? const Center(child: CircularProgressIndicator())\r\n          : _posts.isEmpty\r\n              ? const Center(child: Text('No posts found.'))\r\n              : ListView.builder(\r\n                  itemCount: _posts.length,\r\n                  itemBuilder: (context, index) {\r\n                    final post = _posts[index];\r\n                    return ListTile(\r\n                      title: Text(post['subject'] ?? 'No Subject'),\r\n                      subtitle: Text(post['message'] ?? ''),\r\n                    );\r\n                  },\r\n                ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}